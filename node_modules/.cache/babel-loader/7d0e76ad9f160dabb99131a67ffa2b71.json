{"ast":null,"code":"var _jsxFileName = \"/home/sanjib/Documents/altcampus/dashboard/src/components/Cards.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { data } from \"../data\";\nimport { types } from \"../store/types\";\nimport Card from \"./Card\";\nimport { useSelector } from \"react-redux\";\n\nfunction Cards({\n  onSelectingMutualFund,\n  onSelectingETF\n}) {\n  let funds = useSelector(state => state.funds);\n  let [fundType, setFundType] = useState(\"mf\");\n  useEffect(() => {\n    switch (fundType) {\n      case \"mf\":\n        console.log(fundType);\n        onSelectingMutualFund();\n        break;\n\n      case \"etf\":\n        console.log(fundType);\n        onSelectingETF();\n        break;\n\n      default:\n        return;\n    }\n  }, [fundType]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card_wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"op\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 6\n    }\n  }), funds.map(fund => {\n    return /*#__PURE__*/React.createElement(Card, {\n      fund: fund,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 16\n      }\n    });\n  }));\n}\n\nfunction mapDispatchToProp(dispatch) {\n  return {\n    onSelectingMutualFund: () => dispatch({\n      type: types.FETCH_ALL_MUTUAL_FUNDS\n    }),\n    onSelectingETF: () => dispatch({\n      type: types.FETCH_ALL_ETF\n    })\n  };\n}\n\nfunction mapStateToProp({\n  fund\n}) {\n  return {\n    fund\n  };\n}\n\nexport default connect(mapStateToProp, mapDispatchToProp)(Cards);","map":{"version":3,"sources":["/home/sanjib/Documents/altcampus/dashboard/src/components/Cards.js"],"names":["React","useEffect","useState","connect","data","types","Card","useSelector","Cards","onSelectingMutualFund","onSelectingETF","funds","state","fundType","setFundType","console","log","map","fund","mapDispatchToProp","dispatch","type","FETCH_ALL_MUTUAL_FUNDS","FETCH_ALL_ETF","mapStateToProp"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,QAAqB,SAArB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAAQC,WAAR,QAA0B,aAA1B;;AAEA,SAASC,KAAT,CAAe;AAAEC,EAAAA,qBAAF;AAAyBC,EAAAA;AAAzB,CAAf,EAA0D;AACxD,MAAIC,KAAK,GAAGJ,WAAW,CAACK,KAAK,IAAIA,KAAK,CAACD,KAAhB,CAAvB;AACA,MAAI,CAACE,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,IAAD,CAAtC;AACAD,EAAAA,SAAS,CAAC,MAAM;AAEd,YAAQY,QAAR;AACE,WAAK,IAAL;AACEE,QAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACAJ,QAAAA,qBAAqB;AACrB;;AACF,WAAK,KAAL;AACEM,QAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACAH,QAAAA,cAAc;AACd;;AACF;AACE;AAVJ;AAYD,GAdQ,EAcN,CAACG,QAAD,CAdM,CAAT;AAeA,sBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAK,IAAA,SAAS,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,EAIGF,KAAK,CAACM,GAAN,CAAWC,IAAD,IAAU;AACnB,wBAAO,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAEA,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAFA,CAJH,CADF;AAUD;;AAED,SAASC,iBAAT,CAA2BC,QAA3B,EAAqC;AACnC,SAAO;AACLX,IAAAA,qBAAqB,EAAE,MACrBW,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEhB,KAAK,CAACiB;AAAd,KAAD,CAFL;AAGLZ,IAAAA,cAAc,EAAE,MAAMU,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEhB,KAAK,CAACkB;AAAd,KAAD;AAHzB,GAAP;AAKD;;AAED,SAASC,cAAT,CAAwB;AAAEN,EAAAA;AAAF,CAAxB,EAAkC;AAChC,SAAO;AAAEA,IAAAA;AAAF,GAAP;AACD;;AAED,eAAef,OAAO,CAACqB,cAAD,EAAiBL,iBAAjB,CAAP,CAA2CX,KAA3C,CAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { data } from \"../data\";\nimport { types } from \"../store/types\";\nimport Card from \"./Card\";\nimport {useSelector} from \"react-redux\";\n\nfunction Cards({ onSelectingMutualFund, onSelectingETF }) {\n  let funds = useSelector(state => state.funds)\n  let [fundType, setFundType] = useState(\"mf\");\n  useEffect(() => {\n    \n    switch (fundType) {\n      case \"mf\":\n        console.log(fundType);\n        onSelectingMutualFund();\n        break;\n      case \"etf\":\n        console.log(fundType);\n        onSelectingETF();\n        break;\n      default:\n        return;\n    }\n  }, [fundType]);\n  return (\n    <div className=\"card_wrapper\">\n     <div className=\"op\">\n\n     </div>\n      {funds.map((fund) => {\n        return <Card fund={fund} />;\n      })}\n    </div>\n  );\n}\n\nfunction mapDispatchToProp(dispatch) {\n  return {\n    onSelectingMutualFund: () =>\n      dispatch({ type: types.FETCH_ALL_MUTUAL_FUNDS }),\n    onSelectingETF: () => dispatch({ type: types.FETCH_ALL_ETF }),\n  };\n}\n\nfunction mapStateToProp({ fund }) {\n  return { fund };\n}\n\nexport default connect(mapStateToProp, mapDispatchToProp)(Cards);\n"]},"metadata":{},"sourceType":"module"}