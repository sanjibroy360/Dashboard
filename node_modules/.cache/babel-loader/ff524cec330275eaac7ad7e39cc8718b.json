{"ast":null,"code":"var _jsxFileName = \"/home/sanjib/Documents/altcampus/dashboard/src/components/Cards.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { data } from \"../data\";\nimport { types } from \"../store/types\";\nimport Card from \"./Card\";\nimport { useSelector } from \"react-redux\";\n\nfunction Cards({\n  onSelectingMutualFund,\n  onSelectingETF\n}) {\n  let funds = useSelector(state => state.funds);\n  let [fundType, setFundType] = useState(\"mf\");\n  let state = useSelector(state => state);\n  useEffect(() => {\n    console.log(fundType);\n\n    switch (fundType) {\n      case \"mf\":\n        onSelectingMutualFund();\n        break;\n\n      case \"etf\":\n        console.log(fundType);\n        onSelectingETF();\n        break;\n\n      default:\n        return;\n    }\n  }, [fundType]);\n  if (state.isLoa) return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card_wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fund_options\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    onChange: event => setFundType(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"mf\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }, \"Mutual Funds\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"etf\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }, \"ETFs\"))), funds === null || funds === void 0 ? void 0 : funds.map(fund => {\n    return /*#__PURE__*/React.createElement(Card, {\n      fund: fund,\n      key: fund.scrip,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 16\n      }\n    });\n  }));\n}\n\nfunction mapDispatchToProp(dispatch) {\n  return {\n    onSelectingMutualFund: () => dispatch({\n      type: types.FETCH_ALL_MUTUAL_FUNDS\n    }),\n    onSelectingETF: () => dispatch({\n      type: types.FETCH_ALL_ETF\n    })\n  };\n}\n\nfunction mapStateToProp({\n  fund\n}) {\n  return {\n    fund\n  };\n}\n\nexport default connect(mapStateToProp, mapDispatchToProp)(Cards);","map":{"version":3,"sources":["/home/sanjib/Documents/altcampus/dashboard/src/components/Cards.js"],"names":["React","useEffect","useState","connect","data","types","Card","useSelector","Cards","onSelectingMutualFund","onSelectingETF","funds","state","fundType","setFundType","console","log","isLoa","event","target","value","map","fund","scrip","mapDispatchToProp","dispatch","type","FETCH_ALL_MUTUAL_FUNDS","FETCH_ALL_ETF","mapStateToProp"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,QAAqB,SAArB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,WAAT,QAA4B,aAA5B;;AAEA,SAASC,KAAT,CAAe;AAAEC,EAAAA,qBAAF;AAAyBC,EAAAA;AAAzB,CAAf,EAA0D;AACxD,MAAIC,KAAK,GAAGJ,WAAW,CAAEK,KAAD,IAAWA,KAAK,CAACD,KAAlB,CAAvB;AAEA,MAAI,CAACE,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,IAAD,CAAtC;AACA,MAAIU,KAAK,GAAGL,WAAW,CAAEK,KAAD,IAAWA,KAAZ,CAAvB;AACAX,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;;AACA,YAAQA,QAAR;AACE,WAAK,IAAL;AACEJ,QAAAA,qBAAqB;AACrB;;AACF,WAAK,KAAL;AACEM,QAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACAH,QAAAA,cAAc;AACd;;AACF;AACE;AATJ;AAWD,GAbQ,EAaN,CAACG,QAAD,CAbM,CAAT;AAcA,MAAGD,KAAK,CAACK,KAAT,EACA,oBAEE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,QAAQ,EAAGC,KAAD,IAAWJ,WAAW,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,KAAK,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAQ,IAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,CADF,CADF,EAOGT,KAPH,aAOGA,KAPH,uBAOGA,KAAK,CAAEU,GAAP,CAAYC,IAAD,IAAU;AACpB,wBAAO,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAEA,IAAZ;AAAkB,MAAA,GAAG,EAAEA,IAAI,CAACC,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAFA,CAPH,CAFF;AAcD;;AAED,SAASC,iBAAT,CAA2BC,QAA3B,EAAqC;AACnC,SAAO;AACLhB,IAAAA,qBAAqB,EAAE,MACrBgB,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAErB,KAAK,CAACsB;AAAd,KAAD,CAFL;AAGLjB,IAAAA,cAAc,EAAE,MAAMe,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAErB,KAAK,CAACuB;AAAd,KAAD;AAHzB,GAAP;AAKD;;AAED,SAASC,cAAT,CAAwB;AAAEP,EAAAA;AAAF,CAAxB,EAAkC;AAChC,SAAO;AAAEA,IAAAA;AAAF,GAAP;AACD;;AAED,eAAenB,OAAO,CAAC0B,cAAD,EAAiBL,iBAAjB,CAAP,CAA2ChB,KAA3C,CAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { data } from \"../data\";\nimport { types } from \"../store/types\";\nimport Card from \"./Card\";\nimport { useSelector } from \"react-redux\";\n\nfunction Cards({ onSelectingMutualFund, onSelectingETF }) {\n  let funds = useSelector((state) => state.funds);\n  \n  let [fundType, setFundType] = useState(\"mf\");\n  let state = useSelector((state) => state);\n  useEffect(() => {\n    console.log(fundType);\n    switch (fundType) {\n      case \"mf\":\n        onSelectingMutualFund();\n        break;\n      case \"etf\":\n        console.log(fundType);\n        onSelectingETF();\n        break;\n      default:\n        return;\n    }\n  }, [fundType]);\n  if(state.isLoa)\n  return (\n    \n    <div className=\"card_wrapper\">\n      <div className=\"fund_options\">\n        <select onChange={(event) => setFundType(event.target.value)}>\n          <option value=\"mf\">Mutual Funds</option>\n          <option value=\"etf\">ETFs</option>\n        </select>\n      </div>\n      {funds?.map((fund) => {\n        return <Card fund={fund} key={fund.scrip} />;\n      })}\n    </div>\n  );\n}\n\nfunction mapDispatchToProp(dispatch) {\n  return {\n    onSelectingMutualFund: () =>\n      dispatch({ type: types.FETCH_ALL_MUTUAL_FUNDS }),\n    onSelectingETF: () => dispatch({ type: types.FETCH_ALL_ETF }),\n  };\n}\n\nfunction mapStateToProp({ fund }) {\n  return { fund };\n}\n\nexport default connect(mapStateToProp, mapDispatchToProp)(Cards);\n"]},"metadata":{},"sourceType":"module"}