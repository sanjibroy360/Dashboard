{"ast":null,"code":"import { createStore, applyMiddleware, compose } from \"redux\";\nimport { types } from \"./types\";\nimport createSagaMiddleware from \"redux-saga\";\nimport { watchRequirements } from \"../saga/saga\";\nconst sagaMiddleware = createSagaMiddleware();\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nlet initialState = {\n  funds: [],\n  isLoading: false\n};\n\nfunction reducer(state = initialState, action) {\n  switch (action.type) {\n    case types.GET_ALL_MUTUAL_FUNDS:\n      return { ...state,\n        funds: action.payload\n      };\n\n    case types.GET_ALL_ETF:\n      return { ...state,\n        funds: action.payload\n      };\n\n    case types.FETCHING_DATA:\n      return { ...state,\n        isLoading: true\n      };\n\n    case types.DATA_FETCHED:\n    default:\n      return { ...state\n      };\n  }\n}\n\nexport const store = createStore(reducer, composeEnhancers(applyMiddleware(sagaMiddleware)));\nsagaMiddleware.run(watchRequirements);","map":{"version":3,"sources":["/home/sanjib/Documents/altcampus/dashboard/src/store/index.js"],"names":["createStore","applyMiddleware","compose","types","createSagaMiddleware","watchRequirements","sagaMiddleware","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","initialState","funds","isLoading","reducer","state","action","type","GET_ALL_MUTUAL_FUNDS","payload","GET_ALL_ETF","FETCHING_DATA","DATA_FETCHED","store","run"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,SAASC,KAAT,QAAsB,SAAtB;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,SAASC,iBAAT,QAAkC,cAAlC;AAEA,MAAMC,cAAc,GAAGF,oBAAoB,EAA3C;AAEA,MAAMG,gBAAgB,GAAGC,MAAM,CAACC,oCAAP,IAA+CP,OAAxE;AAEA,IAAIQ,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,EADU;AAEjBC,EAAAA,SAAS,EAAE;AAFM,CAAnB;;AAKA,SAASC,OAAT,CAAiBC,KAAK,GAAGJ,YAAzB,EAAuCK,MAAvC,EAA+C;AAC7C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKb,KAAK,CAACc,oBAAX;AACE,aAAO,EAAE,GAAGH,KAAL;AAAYH,QAAAA,KAAK,EAAEI,MAAM,CAACG;AAA1B,OAAP;;AACF,SAAKf,KAAK,CAACgB,WAAX;AACE,aAAO,EAAE,GAAGL,KAAL;AAAYH,QAAAA,KAAK,EAAEI,MAAM,CAACG;AAA1B,OAAP;;AACF,SAAKf,KAAK,CAACiB,aAAX;AACE,aAAO,EAAC,GAAGN,KAAJ;AAAWF,QAAAA,SAAS,EAAE;AAAtB,OAAP;;AACF,SAAKT,KAAK,CAACkB,YAAX;AAEA;AACE,aAAO,EAAE,GAAGP;AAAL,OAAP;AAVJ;AAYD;;AAED,OAAO,MAAMQ,KAAK,GAAGtB,WAAW,CAC9Ba,OAD8B,EAE9BN,gBAAgB,CAACN,eAAe,CAACK,cAAD,CAAhB,CAFc,CAAzB;AAKPA,cAAc,CAACiB,GAAf,CAAmBlB,iBAAnB","sourcesContent":["import { createStore, applyMiddleware, compose } from \"redux\";\nimport { types } from \"./types\";\nimport createSagaMiddleware from \"redux-saga\";\nimport { watchRequirements } from \"../saga/saga\";\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nlet initialState = {\n  funds: [],\n  isLoading: false\n};\n\nfunction reducer(state = initialState, action) {\n  switch (action.type) {\n    case types.GET_ALL_MUTUAL_FUNDS:\n      return { ...state, funds: action.payload };\n    case types.GET_ALL_ETF:\n      return { ...state, funds: action.payload };\n    case types.FETCHING_DATA:\n      return {...state, isLoading: true};\n    case types.DATA_FETCHED:\n      \n    default:\n      return { ...state };\n  }\n}\n\nexport const store = createStore(\n  reducer,\n  composeEnhancers(applyMiddleware(sagaMiddleware))\n);\n\nsagaMiddleware.run(watchRequirements);\n"]},"metadata":{},"sourceType":"module"}