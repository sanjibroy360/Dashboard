{"ast":null,"code":"var _jsxFileName = \"/home/sanjib/Documents/altcampus/dashboard/src/components/Cards.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { types } from \"../store/types\";\nimport Card from \"./Card\";\nimport { useSelector } from \"react-redux\";\nimport Loader from \"./Loader\";\n\nfunction Cards({\n  onSelectingMutualFund,\n  onSelectingETF\n}) {\n  var _state$funds;\n\n  let state = useSelector(state => state);\n  let [fundType, setFundType] = useState(Mu);\n  useEffect(() => {\n    switch (fundType) {\n      case \"Mutual funds\":\n        onSelectingMutualFund();\n        break;\n\n      case \"ETF\":\n        onSelectingETF();\n        break;\n\n      default:\n        return;\n    }\n  }, [fundType]);\n\n  if (state.isLoading) {\n    return /*#__PURE__*/React.createElement(Loader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card_wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fund_options\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    onChange: event => setFundType(event.target.value),\n    value: fundType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Mutual funds\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, \"Mutual Funds\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"ETF\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }, \"ETFs\"))), (_state$funds = state.funds) === null || _state$funds === void 0 ? void 0 : _state$funds.map(fund => {\n    return /*#__PURE__*/React.createElement(Card, {\n      fund: fund,\n      key: fund.scrip,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 16\n      }\n    });\n  }));\n}\n\nfunction mapDispatchToProp(dispatch) {\n  return {\n    onSelectingMutualFund: () => dispatch({\n      type: types.FETCH_ALL_MUTUAL_FUNDS\n    }),\n    onSelectingETF: () => dispatch({\n      type: types.FETCH_ALL_ETF\n    })\n  };\n}\n\nfunction mapStateToProp({\n  fund\n}) {\n  return {\n    fund\n  };\n}\n\nexport default connect(mapStateToProp, mapDispatchToProp)(Cards);","map":{"version":3,"sources":["/home/sanjib/Documents/altcampus/dashboard/src/components/Cards.js"],"names":["React","useEffect","useState","connect","types","Card","useSelector","Loader","Cards","onSelectingMutualFund","onSelectingETF","state","fundType","setFundType","Mu","isLoading","event","target","value","funds","map","fund","scrip","mapDispatchToProp","dispatch","type","FETCH_ALL_MUTUAL_FUNDS","FETCH_ALL_ETF","mapStateToProp"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAEA,SAASC,KAAT,CAAe;AAAEC,EAAAA,qBAAF;AAAyBC,EAAAA;AAAzB,CAAf,EAA0D;AAAA;;AACxD,MAAIC,KAAK,GAAGL,WAAW,CAAEK,KAAD,IAAWA,KAAZ,CAAvB;AAEA,MAAI,CAACC,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAACY,EAAD,CAAtC;AAEAb,EAAAA,SAAS,CAAC,MAAM;AACd,YAAQW,QAAR;AACE,WAAK,cAAL;AACEH,QAAAA,qBAAqB;AACrB;;AACF,WAAK,KAAL;AACEC,QAAAA,cAAc;AACd;;AACF;AACE;AARJ;AAUD,GAXQ,EAWN,CAACE,QAAD,CAXM,CAAT;;AAYA,MAAID,KAAK,CAACI,SAAV,EAAqB;AACnB,wBAAO,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AACD,sBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,QAAQ,EAAGC,KAAD,IAAWH,WAAW,CAACG,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAxC;AAA8D,IAAA,KAAK,EAAEN,QAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,KAAK,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAQ,IAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,CADF,CADF,kBAOGD,KAAK,CAACQ,KAPT,iDAOG,aAAaC,GAAb,CAAkBC,IAAD,IAAU;AAC1B,wBAAO,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAEA,IAAZ;AAAkB,MAAA,GAAG,EAAEA,IAAI,CAACC,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAFA,CAPH,CADF;AAaD;;AAED,SAASC,iBAAT,CAA2BC,QAA3B,EAAqC;AACnC,SAAO;AACLf,IAAAA,qBAAqB,EAAE,MACrBe,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAErB,KAAK,CAACsB;AAAd,KAAD,CAFL;AAGLhB,IAAAA,cAAc,EAAE,MAAMc,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAErB,KAAK,CAACuB;AAAd,KAAD;AAHzB,GAAP;AAKD;;AAED,SAASC,cAAT,CAAwB;AAAEP,EAAAA;AAAF,CAAxB,EAAkC;AAChC,SAAO;AAAEA,IAAAA;AAAF,GAAP;AACD;;AAED,eAAelB,OAAO,CAACyB,cAAD,EAAiBL,iBAAjB,CAAP,CAA2Cf,KAA3C,CAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { types } from \"../store/types\";\nimport Card from \"./Card\";\nimport { useSelector } from \"react-redux\";\nimport Loader from \"./Loader\";\n\nfunction Cards({ onSelectingMutualFund, onSelectingETF }) {\n  let state = useSelector((state) => state);\n\n  let [fundType, setFundType] = useState(Mu);\n  \n  useEffect(() => {\n    switch (fundType) {\n      case \"Mutual funds\":\n        onSelectingMutualFund();\n        break;\n      case \"ETF\":\n        onSelectingETF();\n        break;\n      default:\n        return;\n    }\n  }, [fundType]);\n  if (state.isLoading) {\n    return <Loader />;\n  }\n  return (\n    <div className=\"card_wrapper\">\n      <div className=\"fund_options\">\n        <select onChange={(event) => setFundType(event.target.value)} value={fundType}>\n          <option value=\"Mutual funds\">Mutual Funds</option>\n          <option value=\"ETF\">ETFs</option>\n        </select>\n      </div>\n      {state.funds?.map((fund) => {\n        return <Card fund={fund} key={fund.scrip} />;\n      })}\n    </div>\n  );\n}\n\nfunction mapDispatchToProp(dispatch) {\n  return {\n    onSelectingMutualFund: () =>\n      dispatch({ type: types.FETCH_ALL_MUTUAL_FUNDS }),\n    onSelectingETF: () => dispatch({ type: types.FETCH_ALL_ETF }),\n  };\n}\n\nfunction mapStateToProp({ fund }) {\n  return { fund };\n}\n\nexport default connect(mapStateToProp, mapDispatchToProp)(Cards);\n"]},"metadata":{},"sourceType":"module"}