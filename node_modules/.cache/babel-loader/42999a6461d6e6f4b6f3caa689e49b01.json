{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, Number_$type, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\n/**\n * @hidden\n */\n\nvar ContainerState =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  tslib_1.__extends(ContainerState, _super);\n\n  function ContainerState() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.e = null;\n    _this.b = new Dictionary$2(Number_$type, Base.$, 0);\n    _this.c = new Dictionary$2(Base.$, Number_$type, 0);\n    _this.a = new Dictionary$2(Number_$type, String_$type, 0);\n    return _this;\n  }\n\n  ContainerState.prototype.g = function (a, b, c, d, e) {\n    if (d.b(\"Name\")) {\n      this.a.item(b, d.a(\"Name\").b);\n      e(a, this.a.item(b), c, false);\n    }\n\n    this.b.item(b, c);\n    this.c.item(c, b);\n  };\n\n  ContainerState.prototype.f = function (a) {\n    return this.b.item(a);\n  };\n\n  ContainerState.prototype.h = function (a, b, c) {\n    var d = this.b.item(b);\n    this.c.removeItem(d);\n    this.b.removeItem(b);\n\n    if (this.a.containsKey(b)) {\n      var e = this.a.item(b);\n      this.a.removeItem(b);\n      c(a, e, false);\n    }\n  };\n\n  ContainerState.prototype.d = function (a) {\n    if (this.c.containsKey(a)) {\n      return this.c.item(a);\n    }\n\n    return -1;\n  };\n\n  ContainerState.$t = markType(ContainerState, 'ContainerState');\n  return ContainerState;\n}(Base);\n\nexport { ContainerState };","map":{"version":3,"sources":["../../../../src/igniteui-core/lib/ContainerState.ts"],"names":[],"mappings":"AAAA;;;;;;;AAOA,SAAS,IAAT,EAAe,YAAf,EAA6B,YAA7B,EAAiD,QAAjD,QAAiE,QAAjE;AAEA,SAAS,YAAT,QAA6B,gBAA7B;AAGA;;;;AAGA,IAAA,cAAA;AAAA;;AAAA;AAAA,UAAA,MAAA,EAAA;AAAoC,EAAA,OAAA,CAAA,SAAA,CAAA,cAAA,EAAA,MAAA;;AAApC,WAAA,cAAA,GAAA;AAAA,QAAA,KAAA,GAAA,MAAA,KAAA,IAAA,IAAA,MAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA,IAAA,IAAA;;AAEC,IAAA,KAAA,CAAA,CAAA,GAAS,IAAT;AACQ,IAAA,KAAA,CAAA,CAAA,GAA+B,IAAI,YAAJ,CAA8B,YAA9B,EAAkD,IAAK,CAAC,CAAxD,EAA2D,CAA3D,CAA/B;AACA,IAAA,KAAA,CAAA,CAAA,GAA+B,IAAI,YAAJ,CAAoC,IAAK,CAAC,CAA1C,EAA6C,YAA7C,EAA2D,CAA3D,CAA/B;AACA,IAAA,KAAA,CAAA,CAAA,GAAkC,IAAI,YAAJ,CAAiC,YAAjC,EAA+C,YAA/C,EAA6D,CAA7D,CAAlC;;AA4BR;;AA3BA,EAAA,cAAA,CAAA,SAAA,CAAA,CAAA,GAAA,UAAE,CAAF,EAAU,CAAV,EAAqB,CAArB,EAA6B,CAA7B,EAAqD,CAArD,EAAmH;AAClH,QAAI,CAAC,CAAC,CAAF,CAAI,MAAJ,CAAJ,EAAiB;AAChB,WAAK,CAAL,CAAO,IAAP,CAAY,CAAZ,EAAuB,CAAC,CAAC,CAAF,CAAI,MAAJ,EAAY,CAAnC;AACA,MAAA,CAAC,CAAC,CAAD,EAAI,KAAK,CAAL,CAAO,IAAP,CAAY,CAAZ,CAAJ,EAAoB,CAApB,EAAuB,KAAvB,CAAD;AACA;;AACD,SAAK,CAAL,CAAO,IAAP,CAAY,CAAZ,EAAe,CAAf;AACA,SAAK,CAAL,CAAO,IAAP,CAAY,CAAZ,EAAe,CAAf;AACA,GAPD;;AAQA,EAAA,cAAA,CAAA,SAAA,CAAA,CAAA,GAAA,UAAE,CAAF,EAAW;AACV,WAAO,KAAK,CAAL,CAAO,IAAP,CAAY,CAAZ,CAAP;AACA,GAFD;;AAGA,EAAA,cAAA,CAAA,SAAA,CAAA,CAAA,GAAA,UAAE,CAAF,EAAU,CAAV,EAAqB,CAArB,EAAwE;AACvE,QAAI,CAAC,GAAG,KAAK,CAAL,CAAO,IAAP,CAAY,CAAZ,CAAR;AACA,SAAK,CAAL,CAAO,UAAP,CAAkB,CAAlB;AACA,SAAK,CAAL,CAAO,UAAP,CAAkB,CAAlB;;AACA,QAAI,KAAK,CAAL,CAAO,WAAP,CAAmB,CAAnB,CAAJ,EAA2B;AAC1B,UAAI,CAAC,GAAG,KAAK,CAAL,CAAO,IAAP,CAAY,CAAZ,CAAR;AACA,WAAK,CAAL,CAAO,UAAP,CAAkB,CAAlB;AACA,MAAA,CAAC,CAAC,CAAD,EAAI,CAAJ,EAAO,KAAP,CAAD;AACA;AACD,GATD;;AAUA,EAAA,cAAA,CAAA,SAAA,CAAA,CAAA,GAAA,UAAE,CAAF,EAAQ;AACP,QAAI,KAAK,CAAL,CAAO,WAAP,CAAmB,CAAnB,CAAJ,EAA2B;AAC1B,aAAO,KAAK,CAAL,CAAO,IAAP,CAAY,CAAZ,CAAP;AACA;;AACD,WAAO,CAAC,CAAR;AACA,GALD;;AA1BO,EAAA,cAAA,CAAA,EAAA,GAAW,QAAQ,CAAC,cAAD,EAAiB,gBAAjB,CAAnB;AAgCR,SAAA,cAAA;AAAC,CAjCD,CAAoC,IAApC,CAAA;;SAAa,c","sourceRoot":"","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as tslib_1 from \"tslib\";\nimport { Base, Number_$type, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\n/**\n * @hidden\n */\nvar ContainerState = /** @class */ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(ContainerState, _super);\n    function ContainerState() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.e = null;\n        _this.b = new Dictionary$2(Number_$type, Base.$, 0);\n        _this.c = new Dictionary$2(Base.$, Number_$type, 0);\n        _this.a = new Dictionary$2(Number_$type, String_$type, 0);\n        return _this;\n    }\n    ContainerState.prototype.g = function (a, b, c, d, e) {\n        if (d.b(\"Name\")) {\n            this.a.item(b, d.a(\"Name\").b);\n            e(a, this.a.item(b), c, false);\n        }\n        this.b.item(b, c);\n        this.c.item(c, b);\n    };\n    ContainerState.prototype.f = function (a) {\n        return this.b.item(a);\n    };\n    ContainerState.prototype.h = function (a, b, c) {\n        var d = this.b.item(b);\n        this.c.removeItem(d);\n        this.b.removeItem(b);\n        if (this.a.containsKey(b)) {\n            var e = this.a.item(b);\n            this.a.removeItem(b);\n            c(a, e, false);\n        }\n    };\n    ContainerState.prototype.d = function (a) {\n        if (this.c.containsKey(a)) {\n            return this.c.item(a);\n        }\n        return -1;\n    };\n    ContainerState.$t = markType(ContainerState, 'ContainerState');\n    return ContainerState;\n}(Base));\nexport { ContainerState };\n//# sourceMappingURL=ContainerState.js.map\n"]},"metadata":{},"sourceType":"module"}