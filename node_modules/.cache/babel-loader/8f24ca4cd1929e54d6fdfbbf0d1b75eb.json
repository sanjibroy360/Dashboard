{"ast":null,"code":"var _jsxFileName = \"/home/sanjib/Documents/altcampus/dashboard/src/components/Cards.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { data } from \"../data\";\nimport { types } from \"../store/types\";\nimport Card from \"./Card\";\n\nfunction Cards({\n  onSelectingMutualFund,\n  onSelectingETF\n}) {\n  let [fundType, setFundType] = useState(\"mf\");\n  useEffect(() => {\n    switch (fundType) {\n      case \"mf\":\n        onSelectingMutualFund();\n        break;\n\n      case \"etf\":\n        onSelectingETF();\n        break;\n\n      default:\n        return;\n    }\n  }, [fundType]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    onChange: event => setFundType(event.target.validationMessage),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"mf\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, \"Mutual Funds\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"etf\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, \"ETFs\")), data === null || data === void 0 ? void 0 : data.mf.map(fund => {\n    return /*#__PURE__*/React.createElement(Card, {\n      fund: fund,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 16\n      }\n    });\n  }));\n}\n\nfunction mapDispatchToProp(dispatch) {\n  return {\n    onSelectingMutualFund: () => dispatch({\n      type: types.FETCH_ALL_MUTUAL_FUNDS\n    }),\n    onSelectingETF: () => dispatch({\n      type: types.FETCH_ALL_ETF\n    })\n  };\n}\n\nfunction mapStateToProp({\n  fund\n}) {\n  return {\n    fund\n  };\n}\n\nexport default connect(mapStateToProp, mapDispatchToProp)(Cards);","map":{"version":3,"sources":["/home/sanjib/Documents/altcampus/dashboard/src/components/Cards.js"],"names":["React","useEffect","useState","connect","data","types","Card","Cards","onSelectingMutualFund","onSelectingETF","fundType","setFundType","event","target","validationMessage","mf","map","fund","mapDispatchToProp","dispatch","type","FETCH_ALL_MUTUAL_FUNDS","FETCH_ALL_ETF","mapStateToProp"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,QAAqB,SAArB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,SAASC,KAAT,CAAe;AAAEC,EAAAA,qBAAF;AAAyBC,EAAAA;AAAzB,CAAf,EAA0D;AACxD,MAAI,CAACC,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,IAAD,CAAtC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd,YAAQS,QAAR;AACE,WAAK,IAAL;AACEF,QAAAA,qBAAqB;AACrB;;AACF,WAAK,KAAL;AACEC,QAAAA,cAAc;AACd;;AACF;AACE;AARJ;AAUD,GAXQ,EAWN,CAACC,QAAD,CAXM,CAAT;AAYA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,QAAQ,EAAGE,KAAD,IAAWD,WAAW,CAACC,KAAK,CAACC,MAAN,CAAaC,iBAAd,CAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,KAAK,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAQ,IAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,CADF,EAKGV,IALH,aAKGA,IALH,uBAKGA,IAAI,CAAEW,EAAN,CAASC,GAAT,CAAcC,IAAD,IAAU;AACtB,wBAAO,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAEA,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAFA,CALH,CADF;AAWD;;AAED,SAASC,iBAAT,CAA2BC,QAA3B,EAAqC;AACnC,SAAO;AACLX,IAAAA,qBAAqB,EAAE,MACrBW,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEf,KAAK,CAACgB;AAAd,KAAD,CAFL;AAGLZ,IAAAA,cAAc,EAAE,MAAMU,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEf,KAAK,CAACiB;AAAd,KAAD;AAHzB,GAAP;AAKD;;AAED,SAASC,cAAT,CAAwB;AAACN,EAAAA;AAAD,CAAxB,EAAgC;AAC5B,SAAO;AAACA,IAAAA;AAAD,GAAP;AACH;;AAED,eAAed,OAAO,CAACoB,cAAD,EAAiBL,iBAAjB,CAAP,CAA2CX,KAA3C,CAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { data } from \"../data\";\nimport { types } from \"../store/types\";\nimport Card from \"./Card\";\n\nfunction Cards({ onSelectingMutualFund, onSelectingETF }) {\n  let [fundType, setFundType] = useState(\"mf\");\n  useEffect(() => {\n    switch (fundType) {\n      case \"mf\":\n        onSelectingMutualFund();\n        break;\n      case \"etf\":\n        onSelectingETF();\n        break;\n      default:\n        return;\n    }\n  }, [fundType]);\n  return (\n    <div>\n      <select onChange={(event) => setFundType(event.target.validationMessage)}>\n        <option value=\"mf\">Mutual Funds</option>\n        <option value=\"etf\">ETFs</option>\n      </select>\n      {data?.mf.map((fund) => {\n        return <Card fund={fund} />;\n      })}\n    </div>\n  );\n}\n\nfunction mapDispatchToProp(dispatch) {\n  return {\n    onSelectingMutualFund: () =>\n      dispatch({ type: types.FETCH_ALL_MUTUAL_FUNDS }),\n    onSelectingETF: () => dispatch({ type: types.FETCH_ALL_ETF }),\n  };\n}\n\nfunction mapStateToProp({fund}) {\n    return {fund};\n}\n\nexport default connect(mapStateToProp, mapDispatchToProp)(Cards);\n"]},"metadata":{},"sourceType":"module"}